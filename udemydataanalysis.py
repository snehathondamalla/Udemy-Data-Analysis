# -*- coding: utf-8 -*-
"""udemydataanalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pTfm9LCgp1vyS4ZDSejZg9qjrMBdKf2j
"""

import pandas as pd

data = pd.read_csv("udemydataset.csv")

data

data.head()       #BASIC INFORMATION ABOUT DATA

data.tail()

data.shape

data.size

data.columns

data.dtypes

data.info()

data.head()

data.duplicated()

data[data.duplicated()]

data.drop_duplicates()

data.drop_duplicates(inplace=True)

data[data.duplicated()]

data.shape

data.head()

data.isnull()

data.isnull().sum()      #Count of Null values

import seaborn as sns     # SEABORN LIBRARY

sns.heatmap(data.isnull())    #Count of Null values using seaborn

import matplotlib.pyplot as plt

data.hist(bins=50, figsize=(15,15))
plt.show()

data.plot(x='num_subscribers', y = 'num_lectures', kind='scatter')
plt.show()

#data.subject.unique()

data.subject.unique()

#data.subject.value_counts()

data.head(2)

data.subject.value_counts()

#data[data.is_paid == False]

data.head(2)

data[data.is_paid == False]

#data[data.is_paid == True]

data[data.is_paid == True]

#data.sort_values('num_subscribers', ascending = False)

data.sort_values('num_subscribers' , ascending = False)

#data.sort_values('num_subscribers')

data.sort_values('num_subscribers')

#data[(data.subject == 'Graphic Design') & (data.price > '100')]

data.head(1)

data[(data.subject == 'Graphic Design') & (data.price < '100') ]

data[(data.subject == 'Graphic Design') & (data.price == '100') ]

#data[data.course_title.str.contains('Python')]

data.head(1)

len(data[data.course_title.str.contains('Python')])

#data.dtypes
#data['published_timestamp'] = pd.to_datetime(data.published_timestamp)
#data.dtypes
#data['Year'] = data['published_timestamp'].dt.year
#data[data.Year == 2015]

data.head(1)

data['published_timestamp'] = pd.to_datetime(data.published_timestamp)

data.dtypes

data.head(1)

#data['Year'] = data['published_timestamp'].dt.year

data['Year'] = data['published_timestamp'].dt.year

data.head(1)

data[data.Year == 2015]

#data.groupby('level')['num_subscribers'].max()
#data.groupby('level').max()

data.head(1)

data.level.unique()

data.groupby('level')['num_subscribers'].max()

data.groupby('level').max()

import numpy as np

data = np.random.rand(10, 10)  # Example random data, replace with your actual data
plt.figure(figsize=(10, 8))
sns.heatmap(data, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

fig, ax = plt.subplots(1, 1, figsize=(15, 9))
sns.heatmap(data, annot=True, cmap='coolwarm')
ax.set(xlabel='features')
ax.set(ylabel='features')

plt.title('Correlation between different features', fontsize = 15, c='black')
plt.show()